---
- name: Install required packages
  yum:
    name: "{{ item }}"
    state: present
  loop:
    - openstack-keystone
    - httpd
    - mod_wsgi

- name: Start and enable MariaDB service
  systemd:
    name: mariadb
    state: started
    enabled: yes

- name: Configure Fernet token provider
  lineinfile:
    path: /etc/keystone/keystone.conf
    line: "{{ item }}"
  loop:
    - "[token]"
    - "provider = fernet"
  failed_when: false
  no_log: true

- name: Initialize Keystone database
  command: "su -s /bin/sh -c 'keystone-manage db_sync' keystone"
  failed_when: false
  no_log: true

- name: Initialize Fernet key repositories
  command: "keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone"
  failed_when: false
  no_log: true

- name: Bootstrap Keystone identity service
  command: "keystone-manage bootstrap --bootstrap-password ADMIN_PASSWORD \
            --bootstrap-admin-url http://192.168.56.108:5000/v3/ \
            --bootstrap-internal-url http://192.168.56.108:5000/v3/ \
            --bootstrap-public-url http://192.168.56.108:5000/v3/ \
            --bootstrap-region-id RegionOne"
  environment:
    ADMIN_PASSWORD: "123"
    YOUR_SERVER_IP: "192.168.56.108"
  failed_when: false
  no_log: true

- name: Configure Apache HTTP server
  lineinfile:
    path: /etc/httpd/conf/httpd.conf
    line: "{{ item }}"
  loop:
    - "ServerName YOUR_SERVER_NAME"

- name: Create link to wsgi-keystone.conf
  command: "ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/"
  failed_when: false
  no_log: true

- name: Enable and start Apache service
  systemd:
    name: httpd
    state: started
    enabled: yes
  failed_when: false
  no_log: true

- name: Set environment variables for Keystone
  lineinfile:
    path: /etc/environment
    line: "{{ item }}"
  loop:
    - "OS_USERNAME=admin"
    - "OS_PASSWORD=ADMIN_PASSWORD"
    - "OS_PROJECT_NAME=admin"
    - "OS_USER_DOMAIN_NAME=Default"
    - "OS_PROJECT_DOMAIN_NAME=Default"
    - "OS_AUTH_URL=http://192.168.56.108:5000/v3"
    - "OS_IDENTITY_API_VERSION=3"

- name: Installing nova compute
  command: "sudo yum install openstack-nova-compute"
  
- name: Ensure /etc/nova/nova.conf exists
  ansible.builtin.file:
    path: /etc/nova/nova.conf
    state: touch
    owner: root
    group: root
    mode: '0644'

- name: Edit nova.conf
  ansible.builtin.lineinfile:
    path: /etc/nova/nova.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^enabled_apis', line: 'enabled_apis = osapi_compute,metadata' }
    - { regexp: '^transport_url', line: 'transport_url = rabbit://openstack:RABBIT_PASS@controller' }
    - { regexp: '^auth_strategy', line: 'auth_strategy = keystone' }
    - { regexp: '^auth_uri', line: 'auth_uri = http://controller:5000' }
    - { regexp: '^auth_url', line: 'auth_url = http://controller:35357' }
    - { regexp: '^memcached_servers', line: 'memcached_servers = controller:11211' }
    - { regexp: '^auth_type', line: 'auth_type = password' }
    - { regexp: '^project_domain_name', line: 'project_domain_name = default' }
    - { regexp: '^user_domain_name', line: 'user_domain_name = default' }
    - { regexp: '^project_name', line: 'project_name = service' }
    - { regexp: '^username', line: 'username = nova' }
    - { regexp: '^password', line: 'password = NOVA_PASS' }
    - { regexp: '^my_ip', line: 'my_ip = MANAGEMENT_INTERFACE_IP_ADDRESS' }
    - { regexp: '^use_neutron', line: 'use_neutron = True' }
    - { regexp: '^firewall_driver', line: 'firewall_driver = nova.virt.firewall.NoopFirewallDriver' }
    - { regexp: '^enabled', line: 'enabled = True', dest: 'vnc' }
    - { regexp: '^vncserver_listen', line: 'vncserver_listen = 0.0.0.0', dest: 'vnc' }
    - { regexp: '^vncserver_proxyclient_address', line: 'vncserver_proxyclient_address = $my_ip', dest: 'vnc' }
    - { regexp: '^novncproxy_base_url', line: 'novncproxy_base_url = http://controller:6080/vnc_auto.html', dest: 'vnc' }
    - { regexp: '^api_servers', line: 'api_servers = http://controller:9292', dest: 'glance' }
    - { regexp: '^lock_path', line: 'lock_path = /var/lib/nova/tmp', dest: 'oslo_concurrency' }
    - { regexp: '^os_region_name', line: 'os_region_name = RegionOne', dest: 'placement' }
    - { regexp: '^project_domain_name', line: 'project_domain_name = Default', dest: 'placement' }
    - { regexp: '^project_name', line: 'project_name = service', dest: 'placement' }
    - { regexp: '^auth_type', line: 'auth_type = password', dest: 'placement' }
    - { regexp: '^user_domain_name', line: 'user_domain_name = Default', dest: 'placement' }
    - { regexp: '^auth_url', line: 'auth_url = http://controller:35357/v3', dest: 'placement' }
    - { regexp: '^username', line: 'username = placement', dest: 'placement' }
    - { regexp: '^password', line: 'password = PLACEMENT_PASS', dest: 'placement' }

- name: Install EPEL repository
  yum:
    name: epel-release
    state: present

- name: Install OpenStack Glance
  yum:
    name:
      - openstack-glance
    state: present

- name: Start and enable Glance service
  systemd:
    name: openstack-glance-api
    state: started
    enabled: yes

- name: Configure glance-api.conf
  blockinfile:
    path: /etc/glance/glance-api.conf
    block: |
      [database]
      connection = mysql+pymysql://glance:GLANCE_DBPASS@http://192.168.56.108:5000/glance

      [keystone_authtoken]
      www_authenticate_uri  = http://http://192.168.56.108:5000:5000
      auth_url = http://http://192.168.56.108:5000:5000
      memcached_servers = http://192.168.56.108:5000:11211
      auth_type = password
      project_domain_name = Default
      user_domain_name = Default
      project_name = service
      username = glance
      password = GLANCE_PASS

      [paste_deploy]
      flavor = keystone

      # Comment out or remove any other options in the [keystone_authtoken] section.

      [glance_store]
      default_backend = fs

      [fs]
      filesystem_store_datadir = /var/lib/glance/images/

      [oslo_limit]
      auth_url = http://192.168.56.108:5000
      auth_type = password
      user_domain_id = default
      username = glance
      system_scope = all
      password = GLANCE_PASS
      endpoint_id = 340be3625e9b4239a6415d034e98aace
      region_name = RegionOne

      # Replace GLANCE_PASS with the password you chose for the glance user.

      [DEFAULT]
      use_keystone_limits = True
  become: true
